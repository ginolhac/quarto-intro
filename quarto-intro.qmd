---
title: "Quarto introduction"
subtitle: "Literate programming"
date: "2024-11-14"
date-format: "dddd, [the] D[<sup style='font-size:65%;font-style:italic;'>th</sup>] [of] MMMM, YYYY"
institute: "University of Luxembourg"
author: "Aurélien Ginolhac, DLSM"
image: img/lit_prog_quarto.png
format:
  unilu-theme-revealjs:
    logo_url: https://ginolhac.github.io/quarto-intro/
revealjs-plugins:
  - pointer
  - drop
from: markdown+emoji
title-slide-attributes: 
  data-background-image: img/lit_prog_quarto.png
  data-background-position: "50% 10%"
  data-background-size: "280px"
embed-resources: true
---

## This presentation


:::{.callout-tip icon=false .incremental}
## Quarto: an open-source scientific and technical publishing system


- What is literate programming
- Learn about the different possibilities:
    + Documents and reports
    + Presentations
        + This one, rendered: {{< fa brands github >}} [https://ginolhac.github.io/quarto-intro/](https://ginolhac.github.io/quarto-intro/)
    + Websites and blogs
    + Dashboards
    + Books
    + Manuscripts
- Render to the output format you want

:::


## 


::: {.huge}
>**Literate programming** is the practice of [mixing]{.green} code and descriptive writing in order to execute and explain a [data analysis]{.green} **simultaneously in the same document**.


— _William Landau_ Developer of `{targets}`
:::


::: {.fragment}
For a bioinformatician, pure programming is barely happening, we need reports/websites where [**content**]{.green} and formatting are disconnected 
:::

::: {.footer}
Source: [`{targets}` user manual](https://books.ropensci.org/targets/literate-programming.html)
:::



## Rmarkdown

Predecessor of Quarto. 

Version 1 in 2016, the idea was to have text and code in one document, execute {{< fa brands r-project >}} code and let the final **markdown** converted to different formats by [`pandoc`](https://pandoc.org/).


:::: {.columns .fragment}
::: {.column width="70%"}

![](img/markdown_hedgehog.png){fig-align="center"}
:::
::: {.column width="30%"}
**Jupyter notebook** were also exploring the same concept.
Rendering order led sometimes to [some frustration](https://www.youtube.com/watch?v=7jiPeIFXb6U)

:::
::::


::: footer
Credit: Artwork by [Allison Horst](https://github.com/allisonhorst)
:::

## Markdown

- **Lightweight** markup language with a simple syntax

::::: {.columns}
:::: {.column width="50%"}

### HTML 

``` html
<!DOCTYPE html>
<html>
<body>

<h1>This is a heading</h1>

<p>This is some text in a <b>paragraph</b></p>

<h2>This is a second level heading</h2>

<ul>
<li><a href="http://exa.com"><code>site</code></a>
<li><img src="https://images.computerhistory.org/revonline/images/500004391-03-01.jpg?w=200">
</ul>
</body>
</html>
```

::::
:::: {.column width="50%" .fragment}

### Markdown equivalent

``` markdown
# This is a heading

This is some text in a **paragraph**

## This is a second level heading

- [`site`](http://exa.com)
- ![](https://images.computerhistory.org/revonline/images/500004391-03-01.jpg?w=200)
```

![Linus and Tux](img/linus-tux.png){.fragment}

::::
:::::

::: {.footer}
See [author markdown guide](https://quarto.org/docs/authoring/markdown-basics.html#text-formatting)
:::

## Quarto 

Extended Rmarkdown. Languages and **Integrated Development Environment** agnostic

:::: {.columns}
::: {.column width="20%"}
![](img/lit_prog_quarto_ide.png)

![Positron](dlsm-bioinfo/positron-logo.png){width=100 fig-align="left"}

:::
::: {.column width="80%"}
![](img/lit_prog_horst_quarto_schematic.png)
:::

::::

## Why use **Quarto** ?

- Write detailed analyses that render to beautiful reports
- Ensure reproducibility
- Mix programming languages (passing along variables)
- Excellent [documentation](https://quarto.org/docs)
- Export a single (`.qmd`) document to various formats (PDF, HTML...)
- Many [extensions](https://m.canouil.dev/quarto-extensions/extensions.html)
- Text file that can (should) be tracked by a version control system (like {{< fa code-branch >}} [git](https://git-scm.com/))
    + {{< fa brands gitlab >}} [UNI gitlab](https://gitlab.com/uniluxembourg/fstm), official place for collaborative work, or  {{< fa brands github >}} [GitHub](https://github.com)
    
![](img/unilu-gitlab.png){fig-align="center" height=}



## Quarto pipeline

[![](img/lit_prog_horst_qmd_render_schema.png)]{fig-align="center"}

## Computation

:::::{.columns}
::::{.column width="33%"}

- In a fresh and clean session
- **Chunks** are **evaluated**
- Sequentially from top to bottom

::::

::::{.column width="33%"}

### Example for `knitr`

- Extracts {{< fa brands r-project >}} chunks
- Interpret/Run them
- Formats results as markdown
- Re-inject in the document (MD)

::::

::::{.column width="33%"}
### [Pandoc]((http://pandoc.org/))
- Converts markdown to the desired document 
  * PDF
  * HTML
  * Word
  * EPUB
  * ...
::::
:::::

## Quarto document: Structure {.scrollable}


::::: {.columns}
:::: {.column width="45%"}

![](img/lit_prog_struct.svg)

::::

::::{.column width="45%"}

:::{.callout-important icon=false}
## YAML header
- Document common variables:
  + title, date, author, ...
- Define **format** and its specific options
- Use <kbd>TAB</kbd> for autocompletion
:::

:::{.callout-note icon=false}
## Free text in Markdown

- Markdown syntax to write your descriptions, remarks
- Literate programming
:::


:::{.callout-tip icon=false}
## Code chunks
Code to be interpreted

- `knitr` for {{< fa brands r-project >}}
- `jupyter` for {{< fa brands python >}}
- Outputs (tables/plots) are inserted below each
:::


::::
:::::



## Popular output formats


:::::{.columns}
::::{.column width="33%"}

### HTML

- Fast rendering
- No need for extra install


::: {.callout-important}
## Default is NOT standalone

Use format option to obtain a self contained HTML

``` yaml
---
format:
  html:
    embed-resources: true
---
```

:::

::::

::::{.column width="33%" .fragment}
### PDF

- Single file
- Requires $\LaTeX$
  
:::{.callout-tip}
## [Typst](https://github.com/typst/typst) new [format](https://quarto.org/docs/output-formats/typst.html) for {{< fa file-pdf >}}

- Fast!
- No need for $\LaTeX$
:::
::::

::::{.column width="33%" .fragment}

### Word (`docx`)

- Widely used
- Editable
- **Collaborate** with people not using Quarto

::::
:::::


## Output examples 1/2  {.scrollable}

:::: {.columns}
::: {.column width="50%"}
### HTML
![](img/literate_prog_html.png)

:::
::: {.column width="50%"}
### Word

![](img/literate_prog_docx.png)
:::
::::

## Output examples {{< fa file-pdf >}} 2/2 {.scrollable}

:::: {.columns}
::: {.column width="50%"}
### Typst
![](img/literate_prog_pdf.png)

:::
::: {.column width="50%"}
### PDF (LaTex)

![](img/literate_prog_typst.png)
:::
::::



## Equations using $\LaTeX$ syntax

::::: {.columns}
:::: {.column width="45%"}
:::{.callout-tip icon=false}
## How to add equations

 * Enclose in `$` for in-line equations
 * `$a^2+b^2=c^2$` renders as $a^2+b^2=c^2$.

 * Double (`$$`) for separate equations.
```
$$G_{\mu v}=8 \pi G (T_{\mu v} + \rho _\Lambda \ g_{\mu v}) $$
```

renders as:

$$G_{\mu v}=8 \pi G (T_{\mu v} + \rho _\Lambda \ g_{\mu v})$$

:::
::::

:::::


## Reports


:::: {.columns}
::: {.column width="40%"}
- Automatic Table of content
- Author metadata (affiliation, {{< fa envelope >}}, {{< fa brands orcid >}})
- Here HTML output, but PDF is only one variable modification away
:::
::: {.column width="60%"}

![](img/dagmar-report.png){fig-align="center"}
:::
::::


## Books

:::: {.columns}
::: {.column width="30%"}
- Bundle large chapters into a website
    + Chapters on the left
    + ToC on the right
- Quarto [docs](https://quarto.org/docs) are one
- Exports to PDF / EPUB etc...
:::
::: {.column width="70%"}
![](img/targets-book.png){fig-align="center"}
:::
::::


## Websites

:::: {.columns}
::: {.column width="40%"}

- Extensive use for teaching
    + Anthoula
    + R. Krause
- Building and deployment via Continuous Integration (CI)
    + Gitlab {{< fa brands gitlab >}}
    + GitHub {{< fa brands github >}}
- Automatic listing pages, search engine, navigation bar and smart caching
- Demo using the [BASV53](https://basv53.uni.lu)

:::
::: {.column width="60%"}
![](img/website-basv53.png){fig-align="center"}

:::
::::

## Dashboards, what we do

- Nice alternative to `shiny` apps (using CI scheduled pipelines)
- Demo using the [labbook timeline of bioinfo](https://uniluxembourg.gitlab.io/fstm/dlsm/bioinfo/labbook-dashboard/)

![](img/labbook-dashboard.png){fig-align="center"}


## Demo simple Quarto doc in VScode

:::: {.columns}
::: {.column width="50%"}
### Minimal header
``` yaml
---
format: html
---
```
:::
::: {.column width="50%"}
### 
``` yaml
---
format: pdf
title: Bioinfo DLSM team 2024
author: Aurélien Ginolhac
date: today
execute: 
  echo: false
---
```
:::
::::

## Quarto Manuscripts

:::: {.columns}
::: {.column width="50%"}

### Command-line

``` bash
❯ quarto create project manuscript dlsm-bioinfo
? Title (dlsm-bioinfo) › Services of the bioinfo DLSM team
Creating project at DLSM/Seminars/2024-quarto-intro/dlsm-bioinfo:
  - Created _quarto.yml
  - Created .gitignore
  - Created index.qmd
  - Created references.bib
```
:::
::: {.column width="50%" .fragment}

### Outcome

``` bash
❯ tree dlsm-bioinfo/
dlsm-bioinfo/
├── dlsm-bioinfo.Rproj
├── index.qmd
├── _quarto.yml
└── references.bib

1 directory, 4 files
```
:::
::::

## PLoS template

Command to add an extensions among many [available](https://m.canouil.dev/quarto-extensions/extensions.html) (+165 references)

``` bash
quarto add quarto-journals/plos
```


![](img/quarto-ext-journals.png){fig-align="center"}

## Quarto Manuscripts, what services we offer

:::: {.columns}
::: {.column width="40%"}
``` bash
dlsm-bioinfo/
├── bioinfo.qmd
├── dag-atac-seq.png
├── dag-rna-seq.png
├── insert-citation.png
├── orbi-bib-export.png
├── _extensions
│   └── quarto-journals
│       └── plos/
├── gaigneaux.bib
├── ginolhac.bib
├── references.bib
├── plos2015.bst <- bib style
├── _manuscript/ <- outputs
└── _quarto.yml  <- main config

```
Demo HTML output

:::
::: {.column width="60%" .fragment}
PLoS PDF example:
![](dlsm-bioinfo/pdf-plos.png)
:::
::::


## Quarto extensions

:::: {.columns}
::: {.column width="50%"}
- We saw already some examples
    + PLoS format
    + This unilu-theme
    + Pointer (press {{< kbd q >}})
:::
::: {.column width="50%" .fragment}
Compiled [here](https://m.canouil.dev/quarto-extensions/)
![](img/quarto-extensions.png)
:::
::::

## Quarto [Drop](https://github.com/r-wasm/quarto-drop): a console in your browser

:::: {.columns}
::: {.column width="50%"}

- Add in header:

``` yaml
---
revealjs-plugins:
  - drop
---
```


- Drop a console of [{{< fa brands r-project >}} webR](https://docs.r-wasm.org/) or [{{< fa brands python >}} pyodide](https://pyodide.org/) with {{< kbd ` `  >}} or button.
- Pre-load packages
``` yaml
format:
  revealjs:
    drop:
      engine: webr
      webr:
        packages:
          - ggplot2
          - dplyr
```
:::
::: {.column width="50%" .fragment}
Example:

- `{ggplot2}` gets automatically downloaded

![](img/quarto-drop.png)
:::
::::


## Positron in beta since June 2024

![](img/positron.png){fig-align="center"}


## Before we stop


:::::{.columns}
::::{.column width="55%"}
:::{.callout-tip icon=false}
## Summary

- What is `Quarto` (`qmd`)
- Basic syntax of `Markdown`
- Separate **content** from **rendering**
- `render` to different output formats
:::

:::{.callout-tip icon=false}
## Further reading 📚

- [Quarto](https://quarto.org/)
- [Quarto extensions](https://m.canouil.dev/quarto-extensions/extensions.html)
- [Quarto cheatsheet](https://rstudio.github.io/cheatsheets/quarto.pdf)
- [Quarto intro presentation](https://mine.quarto.pub/hello-quarto/#/quarto-next-generation-r-markdown)  by **Mine Cetinkaya-Rundel**
- [Reproducible Medical manuscript](https://prerelease.quarto.org/docs/blog/posts/2024-04-01-manuscripts-rmedicine/) by **Mine Cetinkaya-Rundel**
:::
::::

::::{.column width="45%"}
:::{.callout-note icon=false}
## Acknowledgments  🙏 👏

* Anthoula Gaigneaux
* Eric Koncina

### Outside
* Mine Cetinkaya-Rundel
* Xie Yihuie
* Hadley Wickham
* Christophe Dervieux
* Artwork by [Allison Horst](https://twitter.com/allison_horst)
* Mickaël Canouil
* Jenny Bryan
:::

[Thank you for your attention!]{.thanks}
::::
:::::
